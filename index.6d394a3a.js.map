{"mappings":"AAKA,MAAMA,EAASC,SAASC,cAAc,iBAGhCC,GAFSF,SAASC,cAAc,WACpBD,SAASC,cAAc,UACzBD,SAASC,cAAc,cAW5BE,MAAM,wCACZC,MAAKC,IAEwB,IAAtBA,EAAKC,GACL,MAAM,IAAIC,MAAMF,EAAKG,YAGzB,OAAOH,EAAKI,MAAM,IAErBL,MAAKM,KAQV,SAAuBC,GACnB,MAAMC,EAASD,EAAIE,KAAIC,GAAQ,kBAAkBA,EAAKC,OAAOD,EAAKE,kBAAiBC,KAAK,IAExFlB,EAAOmB,UAAYN,C,CATFO,CAACT,EAAK,IAEtBU,OAAMC,GAAOC,QAAQC,MAAMF,KAajBtB,EAARyB,iBAAiB,UAExB,SAAkBC,GACdA,EAAIC,iBAIJ,MAAMC,EAAUF,EAAIG,cAAcC,MAGf,GAFnBP,QAAQQ,IAAIH,IAERA,EAEA,YADAI,MAAM,gBAYd,SAAyBJ,GACrB,OAAOxB,MAAM,iEAAkCwB,mFAC9CvB,MAAKC,IAEmB,IAAjBA,EAAKC,GACL,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,MAAM,IAErBW,OAAMC,GAAOC,QAAQC,MAAMF,I,EAjB5BW,CAAgBL,GAASvB,MAAKM,IAG1BY,QAAQQ,IAAIpB,GA8BpB,SAAsBC,GAClBW,QAAQQ,IAAInB,GACZ,MAAMC,EAASD,EAAIE,KAAIC,GAEvB,uBACWA,EAAKmB,OAAOjB,2BACXF,EAAKoB,uJAOhBjB,KAAK,IAENf,EAAQiC,mBAAmB,YAAavB,E,CA5CpCwB,CAAa1B,EAAK,G,IAiB1B,MASQ2B,MAAEC,EAAKC,OAAEC,EAAMC,SAAEC,EAAQC,OAAEC,EAAMC,WAAEC,GAT9B,CACTT,MAAO,mBACPE,OAAQ,mBACRN,OAAQ,CAAC,mBAAoB,aAC7BQ,UAAU,EACVE,OAAQ,MAKVrB,QAAQQ,IAAIQ","sources":["src/index.js"],"sourcesContent":["\n\n\n\n\nconst select = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst textError = document.querySelector('.error');\nconst catInfo = document.querySelector('.cat-info');\n\nconst LIST_URL = 'https://api.thecatapi.com/v1/breeds/';\nconst BASE_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY = 'live_Nyc5epOZ5A7aIisug3oaSTpi5tyQSrOU7MxmwOH7IUlCWiCTMoHx2WLptYl1EpUG';\n\n\n\n// коллекция пород\n\nfunction fetchBreeds() {\n    return fetch(`${LIST_URL}`)\n    .then(resp => {\n        // console.log(resp)       // приходит ответ на запрос пород\n        if(!resp.ok){\n            throw new Error(resp.statusText)\n        }\n        // return []\n        return resp.json()\n    })\n    .then(data => {\n        // console.log(data);          // массив из 67 пород\n        createOptions(data)\n    })\n    .catch(err => console.error(err))\n}\nfetchBreeds()\n\nfunction createOptions(arr) {\n    const markup = arr.map(item => `<option value=\"${item.id}\">${item.name}</option>`).join('');\n\n    select.innerHTML = markup;\n    // console.log(markup);        // пример разметки\n}\n\n// информация о коте\n\nselect.addEventListener('change', onSearch);\n\nfunction onSearch(evt) {\n    evt.preventDefault();\n\n    // console.dir(evt.currentTarget);\n    // console.dir(evt.currentTarget.value);\n    const breedId = evt.currentTarget.value;\n    console.log(breedId);          // идентификатор породы\n\n    if(!breedId){\n        alert('Empty field');\n        return;\n    }\n\n    fetchCatByBreed(breedId).then(data => {\n        // const {breeds} = data;\n        // console.log(breeds);\n        console.log(data);\n        createMarkup(data)\n    });\n}\n\nfunction fetchCatByBreed(breedId) {\n    return fetch(`${BASE_URL}?limit=10&breed_ids=${breedId}&api_key=${API_KEY}`)\n    .then(resp => {\n        // console.log(resp);      // приходит ответ на запрос\n        if(!resp.ok){\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n    })\n    .catch(err => console.error(err))\n};\n\n\nconst book = {\n    title: \"The Last Kingdom\",\n    author: \"Bernard Cornwell\",\n    breeds: [\"historical prose\", \"adventure\"],\n    isPublic: true,\n    rating: 8.38,\n  };\n  \n  // Деструктуризируем\n  const { title, author, isPublic, rating, coverImage } = book;\n  console.log(title); // undefined\n\nfunction createMarkup(arr) {\n    console.log(arr);\n    const markup = arr.map(item => \n\n    `<div>\n    <p>Name: ${item.breeds.name}</p>\n    <img src=\"${item.url}\" width=\"400\" height=\"200\" alt=\"\">\n    <p>Temperament: </p>\n    <p>Origin: </p>\n    <p>Description: </p>\n    <p>Life span: </p>\n    </div>`\n    )\n    .join('');\n\n    catInfo.insertAdjacentHTML('beforeend', markup)\n};\n"],"names":["$1f0dc3b9307be026$var$select","document","querySelector","$1f0dc3b9307be026$var$catInfo","fetch","then","resp","ok","Error","statusText","json","data","arr","markup","map","item","id","name","join","innerHTML","$1f0dc3b9307be026$var$createOptions","catch","err","console","error","addEventListener","evt","preventDefault","breedId","currentTarget","value","log","alert","$1f0dc3b9307be026$var$fetchCatByBreed","breeds","url","insertAdjacentHTML","$1f0dc3b9307be026$var$createMarkup","title","$1f0dc3b9307be026$var$title","author","$1f0dc3b9307be026$var$author","isPublic","$1f0dc3b9307be026$var$isPublic","rating","$1f0dc3b9307be026$var$rating","coverImage","$1f0dc3b9307be026$var$coverImage"],"version":3,"file":"index.6d394a3a.js.map"}