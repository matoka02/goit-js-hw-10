{"mappings":"AA0Be,SAANA,EAAgBC,GACrB,OAAOC,MAAM,wDAAyBD,oFACrCE,MAAKC,IAEF,IAAIA,EAAKC,GACL,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,MAAM,IAErBC,OAAMC,GAAOC,QAAQC,MAAMF,I,CC/BhC,MAAMG,EAASC,SAASC,cAAc,iBAChCC,EAASF,SAASC,cAAc,WAChCE,EAAYH,SAASC,cAAc,UACnCG,EAAUJ,SAASC,cAAc,aAEvCE,EAAUE,aAAa,UAAU,GACjCD,EAAQE,MAAMC,QAAU,ODAbnB,MAAM,wCACZC,MAAKC,IAEwB,IAAtBA,EAAKC,GAAG,CACR,GAAwB,MAApBiB,SAASC,OACT,MAAO,GAEX,MAAM,IAAIjB,MAAMF,EAAKG,W,CAEzB,OAAOH,EAAKI,MAAM,IAErBC,OAAMC,GAAOC,QAAQC,MAAMF,KCPlBP,MAAKqB,IAEf,GADAb,QAAQc,WAAWD,GACc,IAA7BE,OAAOC,KAAKH,GAAMI,OAGlB,OAFAjB,QAAQc,IAAIC,OAAOC,KAAKH,GAAMI,aAC9BjB,QAAQc,IAAI,KAMpB,SAAuBI,GACnBb,EAAOG,aAAa,UAAU,GAE9B,MAAMW,EAASD,EAAIE,KAAIC,GAAQ,kBAAkBA,EAAKC,OAAOD,EAAKE,kBAAiBC,KAAK,IAExFtB,EAAOuB,UAAYN,C,CARnBO,CAAcb,EAAK,IAcRX,EAARyB,iBAAiB,UAExB,SAAkBC,GACdA,EAAIC,iBACJtB,EAAQkB,UAAY,GACpBpB,EAAOG,aAAa,UAAU,GAG9B,MAAMlB,EAAUsC,EAAIE,cAAcC,MAAMC,OAIxC,GAHAhC,QAAQc,IAAIxB,GACOU,QAAXc,IAAIxB,EAAQ0C,SAEhB1C,EAEA,YADA2C,MAAM,eAEa,KAAZ3C,EAEPD,EAAgBC,GAASE,MAAKqB,IAC1Bb,QAAQc,IAAID,GACZN,EAAQE,MAAMC,QAAU,QAWpC,SAAsBQ,GAClBb,EAAOG,aAAa,UAAU,GAE9BR,QAAQc,IAAII,GAEZ,MAAMC,EAASD,EAAIE,KAAI,EAACc,OAAEA,EAAMZ,GAAEA,EAAEa,IAAEA,EAAGC,MAAEA,KAC3C,aAAaF,EAAO,GAAGX,2BACXY,oCAAsCD,EAAO,GAAGX,+BAC1CW,EAAO,GAAGG,wCACVH,EAAO,GAAGI,oBAE3Bd,KAAK,IAENjB,EAAQgC,mBAAmB,YAAapB,E,CAvBhCqB,CAAa3B,EAAK,IAGtBb,QAAQc,IAAI,Q","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nconst LIST_URL = 'https://api.thecatapi.com/v1/breeds/';\nconst BASE_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY = 'live_Nyc5epOZ5A7aIisug3oaSTpi5tyQSrOU7MxmwOH7IUlCWiCTMoHx2WLptYl1EpUG';\n\n\n// Коллекция пород\n\nfunction fetchBreeds() {\n    return fetch(`${LIST_URL}`)\n    .then(resp => {\n        // console.log(resp)       // приходит ответ на запрос пород\n        if(!resp.ok){\n            if (response.status === 404) {\n                return [];\n                }\n            throw new Error(resp.statusText);\n        }\n        return resp.json();\n    })\n    .catch(err => console.error(err))\n};\n\n// Информация о коте\n\nfunction fetchCatByBreed(breedId) {\n    return fetch(`${BASE_URL}?breed_ids=${breedId}&api_key=${API_KEY}5`)\n    .then(resp => {\n        // console.log(resp);      // приходит ответ на запрос\n        if(!resp.ok){\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n    })\n    .catch(err => console.error(err))\n};\n\n\n\n\nexport {fetchBreeds, fetchCatByBreed};","\"use strict\";\n\nimport { fetchBreeds, fetchCatByBreed } from \"./js/cat-api\";\n\nconst select = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst textError = document.querySelector('.error');\nconst catInfo = document.querySelector('.cat-info');\n\ntextError.setAttribute('hidden', true);\ncatInfo.style.display = 'none';\n\n// Коллекция пород\n\nfetchBreeds().then(data => {\n    console.log(typeof data);\n    if (Object.keys(data).length === 0) {\n        console.log(Object.keys(data).length);\n        console.log('');\n        return\n    }\n    createOptions(data)    \n});\n\nfunction createOptions(arr) {\n    loader.setAttribute('hidden', true);\n\n    const markup = arr.map(item => `<option value=\"${item.id}\">${item.name}</option>`).join('');\n\n    select.innerHTML = markup;\n    // console.log(markup);        // пример разметки\n}\n\n// Информация о коте\n\nselect.addEventListener('change', onSearch);\n\nfunction onSearch(evt) {\n    evt.preventDefault();\n    catInfo.innerHTML = '';\n    loader.setAttribute('hidden', false);\n    // console.dir(evt.currentTarget);\n    // console.dir(evt.currentTarget.value);\n    const breedId = evt.currentTarget.value.trim();\n    console.log(breedId);          // идентификатор породы\n    console.log(breedId.trim());    // содержимое строки\n\n    if(!breedId){\n        alert('Empty field');\n        return;\n    } else if (breedId !== '') {\n\n        fetchCatByBreed(breedId).then(data => {\n            console.log(data);      //object\n            catInfo.style.display = 'block';\n            createMarkup(data)\n        });\n    } else {\n        console.log('do it');\n    }\n\n\n}\n\n\nfunction createMarkup(arr) {\n    loader.setAttribute('hidden', true);\n\n    console.log(arr);        //object\n\n    const markup = arr.map(({ breeds, id, url, width} ) => \n    `<p>Breed: ${breeds[0].name}</p>\n    <img src=\"${url}\" width=\"400\" height=\"200\" alt=\"${breeds[0].name}\">\n    <p>Temperament: ${breeds[0].temperament}</p>\n    <p>Description: ${breeds[0].description}</p>`\n    )\n    .join('');\n\n    catInfo.insertAdjacentHTML('beforeend', markup)\n};\n"],"names":["$c4ebbd28ee7007ee$export$57b7d3a597416aa2","breedId","fetch","then","resp","ok","Error","statusText","json","catch","err","console","error","$1f0dc3b9307be026$var$select","document","querySelector","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$textError","$1f0dc3b9307be026$var$catInfo","setAttribute","style","display","response","status","data","log","Object","keys","length","arr","markup","map","item","id","name","join","innerHTML","$1f0dc3b9307be026$var$createOptions","addEventListener","evt","preventDefault","currentTarget","value","trim","alert","breeds","url","width","temperament","description","insertAdjacentHTML","$1f0dc3b9307be026$var$createMarkup"],"version":3,"file":"index.607ceb44.js.map"}