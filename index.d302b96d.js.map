{"mappings":"YAAA,aA0Be,SAANA,EAAgBC,GACrB,OAAOC,MAAM,GAAyBC,OAxBzB,6CAwBY,eAAgCA,OAAnBF,EAAQ,aAAmBE,OAvBrD,0EAwBXC,MAAK,SAAAC,GAEF,IAAIA,EAAKC,GACL,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,M,IAEfC,OAAM,SAAAC,G,OAAOC,QAAQC,MAAMF,E,IC/BhC,IAAMG,EAASC,SAASC,cAAc,iBAChCC,EAASF,SAASC,cAAc,WAChCE,EAAYH,SAASC,cAAc,UACnCG,EAAUJ,SAASC,cAAc,aAEvCE,EAAUE,aAAa,UAAU,GACjCD,EAAQE,MAAMC,QAAU,ODAbpB,MAAM,GAAYC,OARZ,yCASZC,MAAK,SAAAC,GAEwB,IAAtBA,EAAKC,GAAG,CACR,GAAwB,MAApBiB,SAASC,OACT,MAAO,GAEX,MAAM,IAAIjB,MAAMF,EAAKG,W,CAEzB,OAAOH,EAAKI,M,IAEfC,OAAM,SAAAC,G,OAAOC,QAAQC,MAAMF,E,ICPlBP,MAAK,SAAAqB,GAEkB,IAA7BC,OAAOC,KAAKF,GAAMG,OAQ1B,SAAuBC,GACnBZ,EAAOG,aAAa,UAAU,GAE9B,IAAMU,EAASD,EAAIE,KAAI,SAAAC,G,MAAQ,kBAA8B7B,OAAZ6B,EAAKC,GAAG,MAAc9B,OAAV6B,EAAKE,KAAK,Y,IAAYC,KAAK,IAExFrB,EAAOsB,UAAYN,C,CARnBO,CAAcZ,GAJVP,EAAUE,aAAa,UAAU,E,IAkB1BN,EAARwB,iBAAiB,UAExB,SAAkBC,GACdA,EAAIC,iBACJrB,EAAQiB,UAAY,GACpBnB,EAAOG,aAAa,UAAU,GAG9B,IAAMnB,EAAUsC,EAAIE,cAAcC,MAAMC,OAIxC,IAAI1C,EAEA,YADA2C,MAAM,eAEH,GAAgB,KAAZ3C,EAEP,YADAiB,EAAUE,aAAa,UAAU,GAGjCpB,EAAgBC,GAASG,MAAK,SAAAqB,GAC1Bb,QAAQiC,IAAIpB,GACZN,EAAQE,MAAMC,QAAU,QAOpC,SAAsBO,GAClBZ,EAAOG,aAAa,UAAU,GAE9BR,QAAQiC,IAAIhB,GAEZ,IAAMC,EAASD,EAAIE,KAAI,SAAAe,G,IAAGC,EAAMD,EAANC,OAAYC,GAAFF,EAAFb,GAAOa,EAAHE,KAAUF,EAALG,M,MAC3C,aACY9C,OADC4C,EAAO,GAAGb,KAAK,wBACsB/B,OAAtC6C,EAAI,oCACE7C,OADgC4C,EAAO,GAAGb,KAAK,4BAE/C/B,OADA4C,EAAO,GAAGG,YAAY,8BACA/C,OAAtB4C,EAAO,GAAGI,YAAY,O,IAEvChB,KAAK,IAENhB,EAAQiC,mBAAmB,YAAatB,E,CAnBhCuB,CAAa5B,E","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nconst LIST_URL = 'https://api.thecatapi.com/v1/breeds/';\nconst BASE_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY = 'live_Nyc5epOZ5A7aIisug3oaSTpi5tyQSrOU7MxmwOH7IUlCWiCTMoHx2WLptYl1EpUG';\n\n\n// Коллекция пород\n\nfunction fetchBreeds() {\n    return fetch(`${LIST_URL}`)\n    .then(resp => {\n        // console.log(resp)       // приходит ответ на запрос пород\n        if(!resp.ok){\n            if (response.status === 404) {\n                return [];\n                }\n            throw new Error(resp.statusText);\n        }\n        return resp.json();\n    })\n    .catch(err => console.error(err))\n};\n\n// Информация о коте\n\nfunction fetchCatByBreed(breedId) {\n    return fetch(`${BASE_URL}?breed_ids=${breedId}&api_key=${API_KEY}`)\n    .then(resp => {\n        // console.log(resp);      // приходит ответ на запрос\n        if(!resp.ok){\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n    })\n    .catch(err => console.error(err))\n};\n\n\n\n\nexport {fetchBreeds, fetchCatByBreed};","\"use strict\";\n\nimport { fetchBreeds, fetchCatByBreed } from \"./js/cat-api\";\n\nconst select = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst textError = document.querySelector('.error');\nconst catInfo = document.querySelector('.cat-info');\n\ntextError.setAttribute('hidden', true);\ncatInfo.style.display = 'none';\n\n// Коллекция пород\n\nfetchBreeds().then(data => {\n    // console.log(typeof data);   // object\n    if (Object.keys(data).length === 0) {\n        textError.setAttribute('hidden', false);\n        return\n    } else{\n    // console.log(Object.keys(data).length);\n    createOptions(data)  }  \n});\n\nfunction createOptions(arr) {\n    loader.setAttribute('hidden', true);\n\n    const markup = arr.map(item => `<option value=\"${item.id}\">${item.name}</option>`).join('');\n\n    select.innerHTML = markup;\n}\n\n\n// Информация о коте\n\nselect.addEventListener('change', onSearch);\n\nfunction onSearch(evt) {\n    evt.preventDefault();\n    catInfo.innerHTML = '';\n    loader.setAttribute('hidden', false);\n    // console.dir(evt.currentTarget);\n    // console.dir(evt.currentTarget.value);\n    const breedId = evt.currentTarget.value.trim();\n    // console.log(breedId);          // идентификатор породы\n    // console.log(breedId.trim());    // содержимое строки  \n\n    if(!breedId){\n        alert('Empty field');\n        return;\n    } else if (breedId !== '') {\n        textError.setAttribute('hidden', false);\n        return\n    } else {\n        fetchCatByBreed(breedId).then(data => {\n            console.log(data);      //object\n            catInfo.style.display = 'block';\n            createMarkup(data)\n        });\n    }\n}\n\n\nfunction createMarkup(arr) {\n    loader.setAttribute('hidden', true);\n\n    console.log(arr);        //object\n\n    const markup = arr.map(({ breeds, id, url, width} ) => \n    `<p>Breed: ${breeds[0].name}</p>\n    <img src=\"${url}\" width=\"400\" height=\"200\" alt=\"${breeds[0].name}\">\n    <p>Temperament: ${breeds[0].temperament}</p>\n    <p>Description: ${breeds[0].description}</p>`\n    )\n    .join('');\n\n    catInfo.insertAdjacentHTML('beforeend', markup)\n};\n"],"names":["$8994e83c1b13b9e2$export$57b7d3a597416aa2","breedId","fetch","concat","then","resp","ok","Error","statusText","json","catch","err","console","error","$b8f9b7833fa37166$var$select","document","querySelector","$b8f9b7833fa37166$var$loader","$b8f9b7833fa37166$var$textError","$b8f9b7833fa37166$var$catInfo","setAttribute","style","display","response","status","data","Object","keys","length","arr","markup","map","item","id","name","join","innerHTML","$b8f9b7833fa37166$var$createOptions","addEventListener","evt","preventDefault","currentTarget","value","trim","alert","log","param","breeds","url","width","temperament","description","insertAdjacentHTML","$b8f9b7833fa37166$var$createMarkup"],"version":3,"file":"index.d302b96d.js.map"}